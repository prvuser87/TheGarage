@{
    const string ControllerName = "Company";
}

<h2 class="text-center">Company  Administration</h2>

@(Html.Kendo().Grid<TheGarage.Web.Areas.Administration.ViewModels.Companies.CompanyAdministrationViewModel>()
    .Name("DataGrid")
    .Columns(columns =>
    {
        columns.Bound(model => model.Name);
        columns.Bound(model => model.Description);
        columns.Bound(model => model.CreatedOn).Format("{0:dd/MM/yyyy HH:mm}").Hidden();
        columns.Bound(model => model.ModifiedOn).Format("{0:dd/MM/yyyy HH:mm}").Hidden();
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(180);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Create().Text("Create");
    })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .ColumnMenu()
    .Pageable(x => x.Refresh(true))
    .Sortable(x => x.Enabled(true).AllowUnsort(false))
    .Filterable(x => x.Enabled(true))
    .Reorderable(x => x.Columns(true))
    .Scrollable()
    .Resizable(x => x.Columns(true))
    .ClientDetailTemplateId("template")
    .DataSource(datasource => datasource
        .Ajax()
        .ServerOperation(true)
        .Sort(sort => sort.Add(x => x.Name))
        .Create(create => create.Action("Create", ControllerName))
        .Read(read => read.Action("Read", ControllerName))
        .Update(update => update.Action("Update", ControllerName))
        .Destroy(destroy => destroy.Action("Destroy", ControllerName))
        .Model( model => { model.Id(m => m.Id); })
    )
     .Events(events => events.DataBound("dataBound"))
)

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().TabStrip()
            .Name("tabStrip_#=Id#")
            .SelectedIndex(0)
            .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
            .Items(items =>
            {
                items.Add().Text("Garages").Content(@<text>
        @(Html.Kendo().Grid<TheGarage.Web.Areas.Administration.ViewModels.Garages.GarageAdministrationViewModel>()
                        .Name("grid_#=Id#") // template expression, to be evaluated in the master context
                        .Columns(columns =>
                        {
                            columns.Bound(o => o.Id).Title("ID").Width(56);
                            columns.Bound(o => o.Name).Width(110);
                            columns.Bound(o => o.Address).Width(110);
                        })
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(5)
                            .Read(read => read.Action("Read", "Garages", new { Id = "#=Id#" }))
                        )
                        .Pageable()
                        .Sortable()
                        .ToClientTemplate())
                </text>
                );
                items.Add().Text("Contact Information").Content(
                    "<div class='employee-details'>" +
                        "<ul>" +
                            "<li><label>Country:</label>#= Country #</li>" +
                            "<li><label>City:</label>#= City #</li>" +
                            "<li><label>Address:</label>#= Address #</li>" +
                            "<li><label>Home Phone:</label>#= HomePhone #</li>" +
                        "</ul>" +
                    "</div>"
                );
            })
            .ToClientTemplate())
</script>



<script>
    function dataBound() {
        this.expandRow(this.tbody.find("tr.k-master-row").first());
    }
</script>

<style>
    .k-detail-cell .k-tabstrip .k-content {
        padding: 0.2em;
    }

    .employee-details ul {
        list-style: none;
        font-style: italic;
        margin: 15px;
        padding: 0;
    }

        .employee-details ul li {
            margin: 0;
            line-height: 1.7em;
        }

    .employee-details label {
        display: inline-block;
        width: 90px;
        padding-right: 10px;
        text-align: right;
        font-style: normal;
        font-weight: bold;
    }
</style>