
@{
    const string ControllerName = "Clients";
}

@(Html.Kendo().Grid<TheGarage.Web.Areas.Administration.ViewModels.Clients.ClientAdministrationViewModel>()
    .Name("DataGrid")
    .Columns(columns =>
        {
            columns.Bound(col => col.Id);
            columns.Bound(col => col.UserName);
            columns.Bound(col => col.GarageName);
            columns.Bound(col => col.IsApproved);
            columns.Bound(col => col.CreatedOn).Format("{0:dd/MM/yyyy HH:mm}").Hidden();
            columns.Bound(col => col.ModifiedOn).Format("{0:dd/MM/yyyy HH:mm}").Hidden();
            columns.Command(command => command.Destroy().Text(" ")).Width(80);
        })
    .ToolBar(toolbar =>
    {
        toolbar.Create().Text("Add_participant");
        toolbar.Custom().Text("Back_to_navigation").Action("Navigation", "Administration", new { Area = "" }).Name("custom-toolbar-button");
        toolbar.Custom().Text("Export_to_excel").Name("custom-toolbar-button").HtmlAttributes(new { id = "export" }).Url(Url.Action("ExportToExcel", ControllerName, new { page = 1, pageSize = "~", filter = "!!", sort = "~" }));
    })
    .Editable(editable =>
    {
        editable.Mode(GridEditMode.PopUp);
        editable.Window(w => w.Title(ViewBag.Title));
        editable.DisplayDeleteConfirmation("Delete_prompt");
    })
    .ColumnMenu()
    .Pageable(x => x.Refresh(true))
    .Sortable(x => x.Enabled(true).AllowUnsort(false))
    .Filterable(x => x.Enabled(true))
    .Reorderable(x => x.Columns(true))
    .Resizable(x => x.Columns(true))
    .DataSource(datasource => datasource
        .Ajax()
        .ServerOperation(true)
        .Model(model =>
            {
                model.Id(m => m.Id);
            })
        .Sort(sort => sort.Add(x => x.CreatedOn).Descending())
        .Create(create => create.Action("Create", ControllerName))
        .Read(read => read.Action("ReadClients", ControllerName, new { id = Model }))
        .Destroy(destroy => destroy.Action("Destroy", ControllerName))
    )
)

<script type="text/javascript">
    function onDataBound(e) {
        CreateExportToExcelButton();
    }

    function onEdit(e) {
        var garageComboBox = e.container.find('#ClientId').data('kendoComboBox');
        garageComboBox.value(null);
        garageComboBox.text(null);
    }
</script>

@*@if (Model.HasValue)
{
    <script>
        var exportButton = $('#export');
        var hrefAttr = exportButton.attr('href');
        var linkParts = hrefAttr.split('?');
        var url = linkParts[0] + 'ByContest?' + linkParts[1] + "&contestId=@Model.Value";
        exportButton.attr('href', url);
    </script>
}*@
